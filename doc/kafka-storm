storm-kafka-0.8-plus:           https://github.com/wurstmeister/storm-kafka-0.8-plus
storm-kafka-0.8-plus-test:      https://github.com/wurstmeister/storm-kafka-0.8-plus-test       docker
                                被复制到storm-kafka-0.8-plus下的test/storm/kafka/test下
storm-kafka-0.8-plus-master:
storm-start-demo:               storm-kafka-0.8-plus-test类似, 不过采用手动引入lib下的jar包

可以直接在storm-kafka-0.8-plus的test下添加测试代码. 或者
将storm-kafka-0.8-plus打成jar包, 引入到自己的项目中

-------------------------------------------------------------------------
一: 打包
                                ZooKeeper
Storm:   0.9.1-incubating       3.3.3
Kafka:   kafka_2.9.2-0.8.1      3.3.4   (exclude)
curator: 1.3.3                  3.4.5
curator: 1.0.1                  3.3.3

1) 方案一: curator-1.3.3, zookeeper-3.3.3
修改pom.xml的版本为0.6.0-SNAPSOT: storm-kafka-0.8-plus-0.6.0-SNAPSHOT
CHANGELOG: 由于curator-1.3.3依赖的zookeeper版本为3.4.5, 所以手动添加zookeeper版本为3.3.3

2) 方案二: curator-1.0.1, zookeeper不用声明, 默认其依赖也是3.3.3
storm-kafka-0.8-plus-0.7.0-SNAPSHOT
方案二会导致test测试用例报错!

version             curator     zookeeper
0.5.0-SNAPSHOT      1.3.3       3.4.5 (-)   -表示不用显示指定
0.6.0-SNAPSHOT      1.3.3       3.3.3 (+)   +表示要显示指定
0.7.0-SNAPSHOT      1.0.1       3.3.3 (-)

$ cd storm-kafka-0.8-plus
$ mvn package -DskipTests
最终会在target下生成storm-kafka-0.8-plus-0.X.0-SNAPSHOT.jar

将该jar包添加到项目下. 如果是Intellij IDEA:
File > Project Structure > Modules | MYPROJECT | Dependencies | + | jars or directory
选择storm-kafka-0.8-plus/target下的storm-kafka-0.8-plus-0.X.0-SNAPSHOT.jar | OK

-------------------------------------------------------------------------
二: 测试flume-kafka-storm
1. 在flume-kafka正确的前提下：数据写到到flume的source后, 经过flume-kafka的sink:KafkaSink，并转给flume-kafka的source:KafkaSource. 数据会被kafka的consumer订阅到.
2. kafka中有了数据, 要能够输出到storm流中.

案例一:
MYPROJECT的pom.xml使用curator-1.0.1（按照上面依赖版本zookeeper为3.3.3）执行MyTopology时在插入数据后报错:
94073 [Thread-48-word-reader] INFO  storm.kafka.PartitionManager - No new offset for Partition{host=localhost:9092, partition=0} for topology: 72aad335-3a87-47a8-9224-c8cffa68aade
94107 [Thread-48-word-reader] INFO  storm.kafka.PartitionManager - Fetched 1 messages from: Partition{host=localhost:9092, partition=0}
94108 [Thread-48-word-reader] INFO  storm.kafka.PartitionManager - Added 1 messages from: Partition{host=localhost:9092, partition=0} to internal buffers
向words表中插入 1 条数据
96074 [Thread-48-word-reader] INFO  storm.kafka.PartitionManager - Writing last completed offset (12) to ZK for Partition{host=localhost:9092, partition=0} for topology: 72aad335-3a87-47a8-9224-c8cffa68aade
96391 [Thread-48-word-reader] INFO  storm.kafka.ZkState - Writing /usr/local/zookeeper-3.3.3/word/partition_0 the data {topology={id=72aad335-3a87-47a8-9224-c8cffa68aade, name=local-host}, offset=12, partition=0, broker={host=localhost, port=9092}, topic=kafkaToptic}
96425 [Thread-48-word-reader] ERROR backtype.storm.util - Async loop died!
java.lang.NoSuchMethodError: com.netflix.curator.framework.api.CreateBuilder.creatingParentsIfNeeded()Lcom/netflix/curator/framework/api/ProtectACLCreateModePathAndBytesable;

异常分析: 按照异常说明你可能认为curator的版本为1.0.1太低. 没有对应的方法. 实际上这个版本的CreateBuilder是有这个方法的.
异常的真正原因是curator-1.0.1没有ProtectACLCreateModePathAndBytesable这个类!

案例二:
那么在MYPROJECT的pom.xml中将curator改为1.3.3. 但是如果curator的版本为1.3.3（依赖的zookeeper版本为3.4.5），报错:
Exception in thread "main" java.lang.ExceptionInInitializerError
	at com.zqh.bigdata.kafka_storm.MyTopology.main(MyTopology.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.ClassNotFoundException: org.apache.zookeeper.server.NIOServerCnxn$Factory

异常分析： zookeeper-3.4.5没有了NIOServerCnxn的内部类Factory, 而是采用了NIOServerCnxnFactory. 因此我们不能使用3.4.5的zookeeper
案例一中curator版本太低, 而案例二中zookeeper版本太高. 那么改成curator-1.3.3, zookeeper-3.3.3？

案例三:
手动声明zookeeper的版本. 因为如果不手动声明, 则curator-1.3.3默认依赖的zookeeper版本为3.4.5
启动MyTopology时直接退出了. Ops...

看来不能使用storm-kafka-0.8-plus版本为0.5.0-SNAPSHOT以上的了.

在pom.xml中添加低版本的storm-kafka-0.8-plus, 由于0.3版本已经依赖了curator, 所以可以注释掉.
        <dependency>
            <groupId>net.wurstmeister.storm</groupId>
            <artifactId>storm-kafka-0.8-plus</artifactId>
            <version>0.3.0</version>
        </dependency>

-----------------------------------------------------------------------------------------
AT LAST, I CHOOSE STORM-KAFKA-0.8-PLUS-0.4.0. WHICH FROM: https://github.com/wurstmeister/storm-kafka-0.8-plus/tree/v0.4.0
1. download 0.4.0 zip code
2. copy to my project. not only src, but test. which both on storm.kafka
3. run MyTopology

when tail "hello word" >> ~/data/tail. console msg:
word: [hello], count: [3]
word: [stor2m], count: [2]
word: [hello], count: [3]
word: [stor2m], count: [2]
word: [word], count: [1]

then again tail "hello word" >> ~/data/tail, console msg:
word: [hello], count: [4]
word: [stor2m], count: [2]
word: [word], count: [1]
word: [hello], count: [4]
word: [stor2m], count: [2]
word: [word], count: [2]
as you can see, hello and word 's count both increment 1



